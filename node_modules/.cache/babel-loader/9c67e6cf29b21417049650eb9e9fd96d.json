{"ast":null,"code":"// import { createContext, useReducer } from \"react\";\n// export const ThemeContext = createContext();\n// const INITIAL_STATE = { darkMode: false };\n// const themeReducer = (state, action) => {\n//   switch (action.type) {\n//     case \"TOGGLE\":\n//       return { darkMode: !state.darkMode };\n//     default:\n//       return state;\n//   }\n// };\n// export const ThemeProvider = (props) => {\n//   const [state, dispatch] = useReducer(themeReducer, INITIAL_STATE);\n//   return (\n//     <ThemeContext.Provider value={{state, dispatch}}>{props.children}</ThemeContext.Provider>\n//   );\n// };","map":{"version":3,"sources":["C:/Users/icans/Desktop/portreact/src/components/context.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { createContext, useReducer } from \"react\";\r\n\r\n// export const ThemeContext = createContext();\r\n\r\n// const INITIAL_STATE = { darkMode: false };\r\n\r\n// const themeReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"TOGGLE\":\r\n//       return { darkMode: !state.darkMode };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export const ThemeProvider = (props) => {\r\n//   const [state, dispatch] = useReducer(themeReducer, INITIAL_STATE);\r\n\r\n//   return (\r\n//     <ThemeContext.Provider value={{state, dispatch}}>{props.children}</ThemeContext.Provider>\r\n//   );\r\n// };"]},"metadata":{},"sourceType":"module"}